<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>calEntropy</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>2</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testCalEntropyInvalid0Probability()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>calEntropy</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testCalEntropyInvalid1Probability()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>calEntropy</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>7</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testCalEntropyStandardProbabilites()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>calEntropy</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>7</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testCalEntropyStandardProbabilites()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>calEntropy</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testCalEntropyStandardProbabilites()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>calEntropy</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testCalEntropyStandardProbabilites()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>calEntropy</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>58</index><block>8</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testCalEntropyStandardProbabilites()]</killingTest><description>replaced double return with 0.0d for MathUtilsFixed::calEntropy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>getColumn</mutatedMethod><methodDescription>(I[[D)[D</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testGetColumnNullArray()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>getColumn</mutatedMethod><methodDescription>(I[[D)[D</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>4</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testGetColumnZeroIndexWithTwoNormalArrays()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>getColumn</mutatedMethod><methodDescription>(I[[D)[D</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>getColumn</mutatedMethod><methodDescription>(I[[D)[D</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testGetColumnNullArray()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>getColumn</mutatedMethod><methodDescription>(I[[D)[D</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testGetColumnZeroIndexWithTwoNormalArrays()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>getColumn</mutatedMethod><methodDescription>(I[[D)[D</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testGetColumnZeroIndexWithTwoNormalArrays()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>getColumn</mutatedMethod><methodDescription>(I[[D)[D</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>65</index><block>9</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testGetColumnZeroIndexWithTwoNormalArrays()]</killingTest><description>replaced return value with null for MathUtilsFixed::getColumn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>6</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testNormalizeNegativeElementsInArrayPositiveSum()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>7</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testNormalizeNegativeElementsInArrayPositiveSum()]</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testNormalizeNegativeElementsInArrayPositiveSum()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testNormalizeNegativeElementsInArrayPositiveSum()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testNormalizeNegativeElementsInArrayPositiveSum()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>5</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>6</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>7</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>8</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>rootMeansSquaredError</mutatedMethod><methodDescription>([D[D)D</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>60</index><block>9</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testRMSEOnlyPositives()]</killingTest><description>replaced double return with 0.0d for MathUtilsFixed::rootMeansSquaredError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>11</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeX2EqualsX1()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>11</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeNegativeSlope()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>11</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeDecimalArguments()]</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeDecimalArguments()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeDecimalArguments()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>5</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeDecimalArguments()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeDecimalArguments()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>8</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeDecimalArguments()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>slope</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>36</index><block>11</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSlopeDecimalArguments()]</killingTest><description>replaced double return with 0.0d for MathUtilsFixed::slope</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>sumOfSquares</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>3</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSumOfSquaresAllNegativeElementsInArray()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtilsFixed.java</sourceFile><mutatedClass>MathUtilsFixed</mutatedClass><mutatedMethod>sumOfSquares</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>37</index><block>4</block><killingTest>MathUtilsTest.[engine:junit-jupiter]/[class:MathUtilsTest]/[method:testSumOfSquaresAllNegativeElementsInArray()]</killingTest><description>replaced double return with 0.0d for MathUtilsFixed::sumOfSquares</description></mutation>
</mutations>
